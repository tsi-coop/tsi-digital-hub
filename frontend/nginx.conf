# The 'map' block must be placed at the top level of the 'http' context.
# It cannot be nested inside a 'server' or 'location' block.
map $http_origin $cors_header {
  ~^http?://localhost:3000$ "http://localhost:3000";
  default "";
}

server {
  listen 80;
  server_name localhost;

  # This location block serves the static files for the React application.
  # We explicitly serve index.html for all non-API requests.
  location / {
    root /usr/share/nginx/html;
    index index.html;
    try_files $uri $uri/ @fallback;
  }

  # This named location handles the fallback for the React app.
  # It explicitly serves index.html to prevent the redirection loop.
  location @fallback {
    root /usr/share/nginx/html;
    index index.html;
    rewrite ^(.*)$ /index.html break;
  }

  # This location block handles all requests to the backend API.
  # It explicitly handles the CORS preflight OPTIONS request and then proxies
  # the main request to the 'appserver' container.
  location /api/ {
    # Set the CORS headers for all requests to this location
    add_header 'Access-Control-Allow-Origin' $cors_header;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Max-Age' 1728000; # Cache preflight requests for 20 days

    # Handle the OPTIONS preflight request
    if ($request_method = 'OPTIONS') {
      return 204;
    }

    # Proxy all other requests to the backend container
    # The trailing slash in 'location /api/' is important. It tells Nginx to
    # strip '/api' from the request path before sending it to the backend.
    proxy_pass http://appserver:8080/api/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

